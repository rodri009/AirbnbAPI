pipeline {
    agent any

    stages {
        stage('Hello') {
            steps {
                echo 'Hello!!'
            }
        }
         stage('login to dockerhub') {

            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'docker_username', passwordVariable: 'docker_password')]) {
                        sh "docker login https://index.docker.io/v1/ --username \"\$docker_username\" --password \"\$docker_password\""
                    }
                }
                }
        }
    }

    post {
        success {
            script {
                def to = emailextrecipients([
                    [$class: 'CulpritsRecipientProvider'],
                    [$class: 'DevelopersRecipientProvider'],
                    [$class: 'RequesterRecipientProvider']
                ])
                SendEmailNotification("SUCCESSFUL", to)
            }
        }
        failure {
            script {
                def to = emailextrecipients([
                    [$class: 'CulpritsRecipientProvider'],
                    [$class: 'DevelopersRecipientProvider'],
                    [$class: 'RequesterRecipientProvider']
                ])
                SendEmailNotification("FAILED", to)
            }
        }
    }
}

def SendEmailNotification(String result, to) {
    def subject = "${env.JOB_NAME} - Build #${env.BUILD_NUMBER} ${result}"
    def content = '${JELLY_SCRIPT,template="html"}'
    if(to != null && !to.isEmpty()) {
        emailext(body: content, mimeType: 'text/html',
                 replyTo: '$DEFAULT_REPLYTO', subject: subject,
                 to: to, attachLog: true)
    }
}
